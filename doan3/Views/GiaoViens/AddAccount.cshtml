@model doan3.Models.User

@{
    ViewData["Title"] = "Thêm tài khoản cho giáo viên";
}

<h2>Thêm tài khoản cho giáo viên: @((await _context.GiaoViens.FindAsync(Model.Referenceld))?.Tengiaovien)</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<form asp-action="AddAccount" method="post">
    <input type="hidden" name="id" value="@Model.Referenceld" />
    <div class="form-group">
        <label>Tên đăng nhập</label>
        <input type="text" name="Username" class="form-control" value="@Model.Username" required
               oninvalid="this.setCustomValidity('Vui lòng nhập tên đăng nhập.')"
               oninput="this.setCustomValidity('')" />
    </div>
    <div class="form-group">
        <label>Mật khẩu</label>
        <input type="password" name="Password" class="form-control" required
               oninvalid="this.setCustomValidity('Vui lòng nhập mật khẩu.')"
               oninput="this.setCustomValidity('')" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <input type="email" name="Email" class="form-control" required
               oninvalid="this.setCustomValidity('Vui lòng nhập email.')"
               oninput="this.setCustomValidity('')" />
    </div>
    <div class="form-group mt-2">
        <input type="submit" value="Tạo tài khoản" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Quay lại</a>
    </div>
</form>

@inject doan3.Models.DacsGplxContext _context